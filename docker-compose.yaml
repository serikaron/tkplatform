version: '3.8'

services:
  tk-node:
    image: car.daoyi365.com:5000/tk-node
    build:
      context: .

  proxy:
    image: nginx:latest
    restart: always
    volumes:
      - ./nginx/proxy.conf:/etc/nginx/nginx.conf
      - ./res:/res/file
    ports:
      - "9000:9000"

  api:
    image: car.daoyi365.com:5000/tk-node
    restart: always
    entrypoint: node /app/api/app.mjs
    depends_on:
      - user
      - site
      - ledger
      - system
    ports:
      - "19000:8080"
    volumes:
      - .env:/app/.env

  backend:
    image: car.daoyi365.com:5000/tk-node
    restart: always
    entrypoint: node /app/backend/app.mjs
    depends_on:
      - user
    ports:
      - "19001:8080"
    volumes:
      - .env:/app/.env

  user:
    image: car.daoyi365.com:5000/tk-node
    restart: always
    entrypoint: node /app/user/app.mjs
    depends_on:
      - user_db
      - token
      - captcha
      - sms
    ports:
      - "9001:8080"
    volumes:
      - .env:/app/.env

  user_db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_USER_PASS}
      MONGO_INITDB_AUTHENTICATION_DATABASE: ${MONGO_USER_DB}
    volumes:
      - ./mongo-data/user_db:/data/db

  apid:
    image: car.daoyi365.com:5000/tk-apid
    restart: always
    entrypoint: ./apid --conf=/app/go-config.json
    depends_on:
      - user_db
      - payment_db
    ports:
      - "9010:9010"
    volumes:
      - ./go-config.json:/app/go-config.json

  token:
    image: car.daoyi365.com:5000/tk-node
    restart: always
    environment:
      - SECRET_KEY=${SECRET_KEY}
    entrypoint: node --experimental-json-modules /app/token/app.mjs
    depends_on:
      - token_cache
    ports:
      - "9002:8080"

  token_cache:
    image: redis:alpine
    restart: always

  captcha:
    image: car.daoyi365.com:5000/tk-node
    restart: always
    entrypoint: node /app/captcha/app.mjs
    depends_on:
      - captcha_cache
    ports:
      - "9003:8080"

  captcha_cache:
    image: redis:alpine
    restart: always

  sms:
    image: car.daoyi365.com:5000/tk-node
    restart: always
    entrypoint: node /app/sms/app.mjs
    depends_on:
      - sms_cache
    ports:
      - "9004:8080"
    volumes:
      - .env:/app/.env

  sms_cache:
    image: redis:alpine
    restart: always

  system:
    image: car.daoyi365.com:5000/tk-node
    restart: always
    entrypoint: node /app/system/app.mjs
    depends_on:
      - system_db
    ports:
      - "9005:8080"
    volumes:
      - .env:/app/.env

  system_db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_SYSTEM_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_SYSTEM_PASS}
      MONGO_INITDB_AUTHENTICATION_DATABASE: ${MONGO_SYSTEM_DB}
    volumes:
      - ./mongo-data/system_db:/data/db

  site:
    image: car.daoyi365.com:5000/tk-node
    restart: always
    entrypoint: node /app/site/app.mjs
    depends_on:
      - site_db
    ports:
      - "9006:8080"
    volumes:
      - .env:/app/.env

  site_db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_SITE_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_SITE_PASS}
      MONGO_INITDB_AUTHENTICATION_DATABASE: ${MONGO_SITE_DB}
    volumes:
      - ./mongo-data/site_db:/data/db

  ledger:
    image: car.daoyi365.com:5000/tk-node
    restart: always
    entrypoint: node /app/ledger/app.mjs
    depends_on:
      - ledger_db
    ports:
      - "9007:8080"
    volumes:
      - .env:/app/.env

  ledger_db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_LEDGER_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_LEDGER_PASS}
      MONGO_INITDB_AUTHENTICATION_DATABASE: ${MONGO_LEDGER_DB}
    volumes:
      - ./mongo-data/ledger_db:/data/db

  payment:
    image: car.daoyi365.com:5000/tk-node
    restart: always
    entrypoint: node /app/payment/app.mjs
    depends_on:
      - payment_db
    ports:
      - "9008:8080"
    volumes:
      - .env:/app/.env
      - ./certs:/certs
      - ./out:/out

  payment_db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_PAYMENT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PAYMENT_PASS}
      MONGO_INITDB_AUTHENTICATION_DATABASE: ${MONGO_PAYMENT_DB}
    volumes:
      - ./mongo-data/payment_db:/data/db

  migration:
    image: car.daoyi365.com:5000/tk-node
    entrypoint: node /app/migration/migration.mjs
    depends_on:
      - system_db
      - user_db
    volumes:
      - .env:/app/.env

  file:
    image: car.daoyi365.com:5000/tk-node
    restart: always
    entrypoint: node /app/file/app.mjs
    ports:
      - "9009:8080"
    volumes:
      - ./res:/res
      - .env:/app/.env

  admin:
    image: car.daoyi365.com:5000/tk-node
    restart: always
    entrypoint: node /app/admin/app.mjs
    depends_on:
      - admin_db
    ports:
      - "9011:8080"
    volumes:
      - ./res:/res
      - .env:/app/.env

  admin_db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ADMIN_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ADMIN_PASS}
      MONGO_INITDB_AUTHENTICATION_DATABASE: ${MONGO_ADMIN_DB}
    volumes:
      - ./mongo-data/admin_db:/data/db
