name: release

on:
  push:
    branches: [ release ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "19.x"

      - name: setup env
        run: npm install && sh scripts/gen_test_env.sh

# disable unit test
#      - name: unit test
#        run: npm run test:unit

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

#      - name: bake
#        uses: docker/bake-action@v2.3.0
#        with:
#          files: bake.hcl
#          load: true
      - name: build
        run: sh scripts/build_all.sh

      - name: start services for integration test
        run: sh scripts/start_for_integration.sh
      - name: wait
        run: |
          until curl --output /dev/null --silent --head --fail http://localhost:19000/alive-test; do
            echo "Waiting for the service to start..."
            sleep 5
          done
      - name: prepare user
        run: docker compose logs api && node ./nodes/tests/integration/prepare.mjs && cat ./nodes/tests/integration/client.json
      - name: prepare user
        run: node ./nodes/tests/integration/prepare2.mjs && cat ./nodes/tests/integration/token.mjs
      - name: integration test
        run: npm run test:integration

      - name: show logs when failed
        if: failure()
        run: docker compose logs

      - name: push image
        run: sh scripts/push_image.sh
#        uses: docker/bake-action@v2.3.0
#        with:
#          files: bake.hcl
#          targets: push
#          push: true

      - name: scp files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          source: "docker-compose.yaml, scripts/deploy.sh"
          target: "/root/tkplatform"

      - name: deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          script: |
            cd tkplatform && sh scripts/deploy.sh